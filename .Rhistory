knitr::opts_chunk$set(echo = TRUE)
numeros<-(runif(10000)*10)
hist(runif(10000)*10,main="")
knitr::opts_chunk$set(echo = TRUE)
yvals <- read.table("data/yvalues.txt",header=T)
attach(yvals)
yvals
knitr::opts_chunk$set(echo = TRUE)
data<-read.table("data/skewdata.txt",header=T)
knitr::opts_chunk$set(echo = TRUE)
yvals <- read.table("data/yvalues.txt",header=T)
attach(yvals)
yvals
yord<-sort(y)
yord
#windows()
hist(y)
total<-sum(y)
sum(y)
n<-length(y)
n
media<- total/n
media
media.aritmetica <- function(x) {
sum(x)/length(x) }
data<-c(3,4,6,7)
media.aritmetica(data)
media.aritmetica(y)
mean(y)
dataat<-c(data,100)
dataat
mean(dataat)
mean(data)
dataat
median(dataat)
data
median(data)
median(y)
mean(y)
insectos<-c(1,10,1000,10,1)
#windows()
hist(insectos)
mean(insectos)
median(insectos)
100000^0.2
exp(mean(log(insectos)))
detach(yvals)
rm(insectos)
ls()
y<-c(13,7,5,12,9,15,6,11,9,7,12)
#windows()
plot(y,ylim=c(0,20))
range(y)
y<-c(13,7,5,12,9,15,6,11,9,7,12)
plot(y,ylim=c(0,20))
abline(mean(y),0)
for (i in 1:11) lines(c(i,i),c(y[i],mean(y)))
y-mean(y)
(y-mean(y))^2
sum((y-mean(y))^2)
variance <- function (x)   sum((x-mean(x))^2)/(length(x)-1)
variance(y)
var(y)
# windows()
plot(c(0,32),c(0,15),type="n",xlab="Tamaño de muestra",ylab="Varianza")
for (tm in seq(3,31,2)) {
for( i in 1:30){
x<-rnorm(tm,mean=10,sd=2)
points(tm,var(x)) }}
#windows()
plot(c(0,32),c(0,2),type="n",xlab="Tamaño de muestra",ylab="Error estandar")
for (tm in seq(3,31,2)) {
for( i in 1:30){
x<-rnorm(tm,mean=10,sd=2)
points(tm,sqrt(var(x)/tm)) }}
ozono<- read.table("data/gardens.txt",header=T)
attach(ozono)
ozono
#windows()
par(mfrow=c(1,3))
plot (gardenA)
plot (gardenB)
plot (gardenC)
MediaA<- mean(gardenA)
EEA<- sqrt(var(gardenA)/10)
MediaB<- mean(gardenB)
EEB<- sqrt(var(gardenB)/10)
MediaC<- mean(gardenC)
EEC<- sqrt(var(gardenC)/10)
MediaA
EEA
MediaB
EEB
MediaC
EEC
qt(.975,9)
qt(.975,9)*sqrt(1.3333/10)
#windows()
plot(gardenB)
abline(mean(gardenB),0)
abline((mean(gardenB)+0.826),0, lty=2)
abline((mean(gardenB)-0.826),0, lty=2)
numeros<-(runif(10000)*10)
hist(runif(10000)*10,main="")
means<-numeric(10000)
for (i in 0:10000){
means[i]<- mean(runif(5)*10)}
hist(means,ylim=c(0,1600))
hist(runif(10000)*10,main="")
---
title: "Clase 4. script estimacion 2_bis"
---
---
title: "Clase 4. script estimacion 2_bis"
---
knitr::opts_chunk$set(echo = TRUE)
library(PerformanceAnalytics)
airpoll<-source("data/chap2airpoll.dat")$value
chart.Correlation(log(airpoll+1),
method="pearson",
histogram=TRUE,
pch=20)
library(corrplot)
corr <- round(cor(log(airpoll+1), method = "spearman"),2)
cor.mat <- cor.mtest(log(airpoll+1), conf.level = 0.95)
p1 <- corrplot(corr, method="color",
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat= cor.mat$p, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)$corrPos
text(p1$x, p1$y, round(p1$corr, 2))
knitr::opts_chunk$set(echo = TRUE)
data<-read.table("data/twosample.txt",header=T)
attach(data)
data
file.create(".nojekyll")
library(distill)
file.create(".nojekyll")
knitr::opts_chunk$set(echo = TRUE)
anova<-read.table("data/anova.data.txt",header=T)
attach(anova)
names(anova)
plot(y)
abline(mean(y), 0, col=4)
for (i in 1:length(y)) lines (c(i,i), c(mean(y), y[i]), col=5)
promedios <- tapply(y, f, mean)
plot(y)
lines(c(1, 7), c(promedios[1], promedios[1]), col = 2)
lines(c(7, 14), c(promedios[2], promedios[2]), col = 5)
for (i in 1:7 ) lines (c(i,i), c(promedios[1], y[i]), col = 1, lty=6)
for (i in 8:14) lines (c(i,i), c(promedios[2], y[i]), col = 1, lty=6)
modelo <- lm(y~f)
plot (y)
abline (mean(y), 0, col = 4)
points(predict(modelo), pch = 16, col = 5)
for (i in 1:14) lines(c(i, i), c(mean(y), predict(modelo)[i]), col = 6)
SCT<-sum((y-mean(y))^2)
SCT
SCEa<-sum((y[f=="a"]-mean(y[f=="a"]))^2)
SCEb<-sum((y[f=="b"]-mean(y[f=="b"]))^2)
SCE<-SCEa+SCEb
SCE
SCA<-SCT-SCE
SCA
31.5/2
1-pf(15.75,1,12)
modelo<-aov(y~f)
summary(modelo)
boxplot(y~f,xlab="factor F",ylab="y")
par(mfrow=c(2,2))
plot(modelo)
A<-c(6,8,5,9,7,8,6)
B<-c(9,11,8,12,10,11,9)
t.test(A,B)
summary(modelo)
install.packages("downloadthis")
